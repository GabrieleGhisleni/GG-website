{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Footer.js","components/HandlerData.js","components/Header.jsx","components/TabProject.jsx","shared/ml.jsx","shared/eng.jsx","shared/front.jsx","shared/back.jsx","shared/geo.jsx","shared/customer.jsx","shared/prj.jsx","shared/projects.js","shared/css.jsx","shared/viz.jsx","shared/hobbies.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","useState","open","setOpen","Fragment","Navbar","dark","className","id","fixed","Container","NavbarBrand","to","NavbarToggler","onClick","Collapse","isOpen","navbar","Col","Nav","NavItem","Home","Row","xs","md","List","type","href","Footer","style","textAlign","ListInlineItem","Component","Header","scroll","require","animateScroll","navH","setnavH","useEffect","androidBar","document","getElementById","clientHeight","window","innerHeight","nav","Number","getComputedStyle","height","slice","backgroundImage","cursor","sequence","wrapper","repeat","Infinity","marginTop","class","scrollMore","RenderProjects","data","innerWidth","toOpen","location","useLocation","hash","scrollToTop","smooth","navTab","map","prj","NavLink","toString","rect","getBoundingClientRect","scrollTo","top","handleScroll","name","contentTab","git","projectGit","i","length","pdf","target","color","webpage","push","projectName","projectDescription","TabContent","activeTab","TabPane","tabId","Card","CardHeader","CardBody","whiteSpace","description","padding","Button","borderRadius","size","offset","vertical","tabs","lg","ML","Engineering","Front","Back","Geo","Customer","Project","PROJECTS","HOBBIES","image","extra","Main","path","component","App","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f255608.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport {\r\n    Col,\r\n    Row,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavbarToggler,\r\n    Collapse,\r\n    NavItem,\r\n    Container,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar dark className=\"mainNav\" id='mainNav' fixed=\"top\">\r\n                <Container>\r\n                    <NavbarBrand className=\"mr-auto\">\r\n                        <NavLink to=\"/home\" to=\"/home\">\r\n                            <span className=\"navLogo\">GG Portfolio</span>\r\n                        </NavLink>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={() => setOpen(!open)} />\r\n                    <Collapse isOpen={open} navbar>\r\n                        <Col className='text-center'>\r\n                            <Nav navbar className=\"ml-auto\">\r\n                                <NavItem>\r\n                                    <NavLink to=\"/\" className=\"nav-link\" to=\"/home\" onClick={() => setOpen(!open)}>\r\n                                        Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/projects\" onClick={() => setOpen(!open)}>\r\n                                        Projects\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/hobbies\" onClick={() => setOpen(!open)}>\r\n                                        Hobbies\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            </Col>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import { List, Row, Container, Col, ListI } from \"reactstrap\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Container>\r\n      <Row className='rowAbout text-center'>\r\n        <Col xs='12' md='8'>\r\n          <h4 className='title'>About Me<hr/></h4>\r\n          <div className='homeP'>\r\n            Hi! My Name is Gabriele Ghisleni and i'm a Data Scientist with many\r\n            interests. I work mainly in Python for all tasks in the data science\r\n            world such as machine learning, data visualization, data\r\n            exploration, data engineering and others, together with R for EDA.<br/><br/>\r\n            Besides data science I have learned different tools for web\r\n            development such as HTML, CSS, Js and a professional framework such React.js.\r\n            Along with this front-end skilss i've also a general knowledge on back-end development\r\n            using frameworks such as Django and DBMS gained during my Master \r\n            thesis in Data Science at the University of Trento.\r\n            <br/><br/> <span >Check all the <NavLink to='/projects#all'>projects</NavLink> made untill now!</span>\r\n          </div>\r\n          </Col>\r\n        <Col xs='12' md='4'>\r\n          <h4 className=\"contacts title\">Contacts<hr/></h4>\r\n          <div className=\"contactList \">\r\n            <List type=\"unstyled\">\r\n              <li>\r\n                <a href=\"https://github.com/GabrieleGhisleni\">\r\n                  <i className=\"fa fa-github fa-lg\">&nbsp;Github</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.linkedin.com/in/gabriele-ghisleni-bb553a199/\">\r\n                  <i className=\"fa fa-linkedin fa-lg\">&nbsp;Linkedin</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.facebook.com/gabriele.ghisleni.125\">\r\n                  <i className=\"fa fa-facebook fa-lg\">&nbsp;Facebook</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.instagram.com/g_gabry_/\">\r\n                  <i className=\"fa fa-instagram fa-lg\">&nbsp;Instagram</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"mailto:gabriele.ghisleni01@gmail.com\">\r\n                  <i className=\"fa fa-envelope-o fa-lg\">&nbsp;Email Me</i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"@\">\r\n                  <i className=\"fa fa-info fa-lg\">&nbsp;Download CV</i>\r\n                </a>\r\n              </li>\r\n            </List>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n  );\r\n};\r\n","import { List, ListInlineItem } from \"reactstrap\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <span>@2021 Ghisleni Gabriele</span>\r\n                    </div>\r\n                    <div className=\"col\" style={{ textAlign: \"right\" }}>\r\n                        <List type=\"inline\">\r\n                            <ListInlineItem>\r\n                                <a href=\"https://github.com/GabrieleGhisleni\">\r\n                                    <i className=\"fa fa-github fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.linkedin.com/in/gabriele-ghisleni-bb553a199/\">\r\n                                    <i className=\"fa fa-linkedin fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.facebook.com/gabriele.ghisleni.125\">\r\n                                    <i className=\"fa fa-facebook fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.instagram.com/g_gabry_/\">\r\n                                    <i className=\"fa fa-instagram fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"mailto:gabriele.ghisleni01@gmail.com\">\r\n                                    <i className=\"fa fa-envelope-o fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"@\">\r\n                                    <i className=\"fa fa-info fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TabContent,\r\n  CardHeader,\r\n  CardBody,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport {useLocation} from 'react-router-dom'\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass TabProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      activeTab: '0',\r\n      inf: window.innerWidth < 768 ? \"hidden\" : \"visible\",\r\n      visible: true,\r\n    };\r\n\r\n    this.toggleTav = this.toggleTav.bind(this);\r\n    this.scrollUp = this.scrollUp.bind(this);\r\n    this.scroll = this.scroll.bind(this);\r\n  }\r\n\r\n  toggleTav(val) {\r\n    this.setState({ activeTab: val });\r\n  }\r\n\r\n  scrollUp() {\r\n\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  scroll() {\r\n    this.setState({inf:\"visible\"})\r\n    if (window.innerWidth < 768) {\r\n      this.myRef.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\r\n    } \r\n  }\r\n\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const navTab = data.map((prj) => {\r\n      let activation = this.state.activeTab === prj.id.toString();\r\n      return (\r\n        <Nav navbar className=\"ml-auto\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activation }, \"myItem\")}\r\n            onClick={() => {\r\n              this.toggleTav(prj.id.toString());\r\n              this.scroll();\r\n            }}\r\n          >\r\n            <a className=\"navTabs\"> {prj.name}</a>\r\n          </NavLink>\r\n        </NavItem>\r\n        </Nav>\r\n      );\r\n    });\r\n\r\n    const contentTab = data.map((prj) => {\r\n      let git = [];\r\n      if (prj.projectGit) {\r\n        git = [\r\n          <div className=\"related\">\r\n            <hr />\r\n            <h7>Related Works</h7>\r\n            <hr />\r\n          </div>,\r\n        ];\r\n        for (var i = 0; i < prj.projectGit.length; i++) {\r\n          let pdf = null;\r\n          if (prj.pdf[i]) {\r\n            pdf = (\r\n              <p className=\"body\">\r\n                <em>\r\n                  Report in pdf:{\" \"}\r\n                  <a target=\"_blank\" href={prj.pdf[i]}>\r\n                    {\" \"}\r\n                    &nbsp;{\" \"}\r\n                    <i\r\n                      style={{ color: \"firebrick\" }}\r\n                      className=\"fa fa-file-pdf-o\"\r\n                    ></i>\r\n                  </a>{\" \"}\r\n                </em>\r\n              </p>\r\n            );\r\n          }\r\n          let webpage = null;\r\n          if (prj.webpage) {\r\n            if (prj.webpage[i]) {\r\n              webpage = (\r\n                <p className=\"body\">\r\n                  <em>\r\n                    Active WebPage:{\" \"}\r\n                    <a href={prj.webpage[i]} target=\"_blank\">\r\n                      {\" \"}\r\n                      Visit the App!{\" \"}\r\n                      <i\r\n                        style={{ color: \"firebrick\" }}\r\n                        className=\"fa fa-rocket\"\r\n                      ></i>\r\n                    </a>{\" \"}\r\n                  </em>\r\n                </p>\r\n              );\r\n            }\r\n          }\r\n          git.push(\r\n            <div className=\"gitLink\">\r\n              <h6>\r\n                <a target=\"_blank\" href={prj.projectGit[i]}>\r\n                  {i + 1 + \". \"}\r\n                  {prj.projectName[i]} <i className=\"fa fa-github fa-lg\"></i>\r\n                </a>\r\n              </h6>\r\n              <p>\r\n                {\" \"}\r\n                {prj.projectDescription[i]} <br /> {pdf}\r\n                {webpage}{\" \"}\r\n              </p>\r\n              <hr className=\"HR\" />\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <TabContent activeTab={this.state.activeTab}>\r\n          <TabPane tabId={prj.id.toString()}>\r\n            <Row className=\"text-justify myFont\">\r\n              <Col className=\"col-12 sm myCol\">\r\n                <Card className=\"project\">\r\n                  <CardHeader className=\"cardH\">{prj.name}</CardHeader>\r\n                  <CardBody>\r\n                    <div style={{ whiteSpace: \"pre-line\" }}>\r\n                      {prj.description}\r\n                    </div>\r\n                    {git}\r\n                  </CardBody>\r\n                  <Row style={{ textAlign: \"right\", padding: \"2px\" }}>\r\n                    <Col className=\"col-12\">\r\n                      <Button\r\n                        className=\"btn bg-transparent\"\r\n                        onClick={this.scrollUp}\r\n                        style={{ borderRadius: \"30px\" }}\r\n                      >\r\n                        <i\r\n                          className=\"fa fa-angle-double-up\"\r\n                          style={{ color: \"black\" }}\r\n                        ></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Container style={{marginTop:\"70px\"}}>\r\n            <Row>\r\n              <Col xs={{size:10, offset:1}} className=\"col-md-auto leftNav\">\r\n                <Nav vertical tabs>\r\n                  {navTab}\r\n                </Nav>\r\n              </Col>\r\n              \r\n              <Col className=\"col-12 col-md\" style={{visibility: this.state.inf}}>\r\n                <div ref={this.myRef}> </div>\r\n                {contentTab}\r\n              </Col>\r\n            </Row>\r\n   \r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabProject;\r\n","import { Container, Col, Row } from \"reactstrap\";\r\nimport TypeAnimation from \"react-type-animation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Header = () => {\r\n  var img = 'assets/images/2_1.jpg'\r\n  var Scroll = require('react-scroll');\r\n  var scroll    = Scroll.animateScroll;\r\n  const [navH, setnavH] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const elementHeight = document.getElementById('main').clientHeight;\r\n    const androidBar = elementHeight - window.innerHeight\r\n    var nav = document.getElementById('mainNav')\r\n    var navH = Number(getComputedStyle(nav).height.slice(0, -2))\r\n    setnavH(navH - androidBar)})\r\n\r\n  const seq = [\r\n    \"Data Scientist \", 3000,\r\n    \"Web Developer \", 3000,\r\n  ];\r\n\r\n\r\n  return (\r\n    <Row id='main' className=\"firstPage backImg\" style={{ backgroundImage: `url(${img})` }}>\r\n      <Container className=\"align-self-center\">\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <h1 className=\"name\">Gabriele Ghisleni</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            {/* <h2>Student at UniTN</h2> */}\r\n            <TypeAnimation\r\n              className=\"animation\"\r\n              cursor={true}\r\n              sequence={seq}\r\n              wrapper=\"h2\"\r\n              repeat={Infinity}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"100px\" }}>\r\n          <Col>\r\n            <div class=\"arrow bounce\">\r\n              <a class=\"fa fa-arrow-down fa-2x\" \r\n              onClick={()=> scroll.scrollMore((window.innerHeight - navH))}>\r\n              </a>\r\n            </div></Col>\r\n        </Row>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n{/* <Row>\r\n  <Col className='text-center'>\r\n    <img\r\n      className=\"myImg img-fluid img-circle img-rounded\"\r\n      src=\"https://gabrieleghisleni.github.io/GG-website/assets/images/home.jpg\"\r\n      //  src=\"./assets/images/home.jpg\"\r\n      height=\"150\"\r\n      width=\"150\"\r\n      alt=\"mySelf\"\r\n    />\r\n  </Col>\r\n</Row> */}","import { useState, useEffect } from \"react\";\r\nimport { NavItem, NavLink, Row, Col, \r\n    Container, Button, TabContent, TabPane, Card, CardHeader, CardBody, Nav } from \"reactstrap\";\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst RenderProjects = (data) => {\r\n    const xs = window.innerWidth < 975\r\n    var Scroll   = require('react-scroll');\r\n    var scroll    = Scroll.animateScroll;\r\n\r\n    const [toOpen, setOpen] = useState(xs? null: \"0\")\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {if (location.hash) scroll.scrollToTop({smooth: true})}, [location,])\r\n\r\n    function handleScroll(){\r\n        if (!xs){scroll.scrollToTop({  smooth: true,})}\r\n        else{\r\n            var doc = document.getElementById(\"content\")\r\n            var rect = doc.getBoundingClientRect();\r\n            scroll.scrollTo(rect.top - 50 )\r\n        }}\r\n\r\n    const navTab = data.map((prj) => {\r\n        return (\r\n            <NavItem>\r\n                <NavLink className=\"myItem\" onClick={() => { \r\n                    setOpen(prj.id.toString()) \r\n                    handleScroll()\r\n                    }}>\r\n                    <span className=\"navTabs\"> {prj.name}</span>\r\n                </NavLink>\r\n            </NavItem>\r\n        )\r\n    });\r\n\r\n    const contentTab = data.map((prj) => {\r\n        let git = [];\r\n        if (prj.projectGit) {\r\n            git = [<div className=\"related\">\r\n                <hr />\r\n                <h7>Related Works</h7>\r\n                <hr />\r\n            </div>];\r\n\r\n            for (var i = 0; i < prj.projectGit.length; i++) {\r\n                let pdf = null;\r\n                if (prj.pdf[i]) {\r\n                    pdf = (\r\n                        <p className=\"body\">\r\n                            <em>\r\n                                Report in pdf:{\" \"}\r\n                                <a target=\"_blank\" href={prj.pdf[i]}>\r\n                                    {\" \"}\r\n                                    &nbsp;{\" \"}\r\n                                    <i\r\n                                        style={{ color: \"firebrick\" }}\r\n                                        className=\"fa fa-file-pdf-o\"\r\n                                    ></i>\r\n                                </a>{\" \"}\r\n                            </em>\r\n                        </p>\r\n                    )}\r\n\r\n                let webpage = null;\r\n                if (prj.webpage) {\r\n                    if (prj.webpage[i]) {\r\n                        webpage = (\r\n                            <p className=\"body\">\r\n                                <em>\r\n                                    Active WebPage:{\" \"}\r\n                                    <a href={prj.webpage[i]} target=\"_blank\">\r\n                                        {\" \"}\r\n                                        Visit the App!{\" \"}\r\n                                        <i\r\n                                            style={{ color: \"firebrick\" }}\r\n                                            className=\"fa fa-rocket\"\r\n                                        ></i>\r\n                                    </a>{\" \"}\r\n                                </em>\r\n                            </p>\r\n                        )}}\r\n                git.push(\r\n                    <div className=\"gitLink\">\r\n                        <h6>\r\n                            <a target=\"_blank\" href={prj.projectGit[i]}>\r\n                                {i + 1 + \". \"}\r\n                                {prj.projectName[i]} <i className=\"fa fa-github fa-lg\"></i>\r\n                            </a>\r\n                        </h6>\r\n                        <p>\r\n                            {\" \"}\r\n                            {prj.projectDescription[i]} <br /> {pdf}\r\n                            {webpage}{\" \"}\r\n                        </p>\r\n                        <hr className=\"HR\" />\r\n                    </div>\r\n                )}}\r\n\r\n        return (\r\n                            \r\n            <TabContent activeTab={toOpen}>\r\n                <TabPane tabId={prj.id.toString()}>\r\n                    <Row className=\"text-justify myFont\">\r\n                        <Col className=\"col-12 sm myCol\">\r\n                            <Card className=\"project\">\r\n                                <CardHeader className=\"cardH\">{prj.name}</CardHeader>\r\n                                <CardBody>\r\n                                    <div style={{ whiteSpace: \"pre-line\" }}>\r\n                                        {prj.description}\r\n                                    </div>\r\n                                    {git}\r\n                                </CardBody>\r\n                                <Row style={{ textAlign: \"right\", padding: \"2px\" }}>\r\n                                    <Col className=\"col-12\">\r\n                                        <Button\r\n                                            className=\"btn bg-transparent\"\r\n                                            style={{ borderRadius: \"30px\" }}\r\n                                            onClick={() => {  \r\n                                                if (xs){ setOpen(null)}\r\n                                                else{ scroll.scrollToTop({  smooth: true})}}}>\r\n                                            <i className=\"fa fa-angle-double-up\" style={{ color: \"black\" }}></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>\r\n    \r\n            </TabContent>\r\n        );\r\n    });\r\n\r\n    return (\r\n\r\n        <Container className='projectContainer'>\r\n            <Row>\r\n                <Col xs={{ size: 10, offset: 1 }} className=\"col-lg-3 offset-lg-0 leftNav\">\r\n                    <Nav vertical tabs>\r\n                        {navTab}\r\n                    </Nav>\r\n                </Col>\r\n\r\n                <Col md={12} lg={9} id='content'>\r\n                    {contentTab}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default RenderProjects;","export const ML = {\r\n  id: 0,\r\n  name: \"Machine Learning\",\r\n  description: (\r\n    <p>\r\n      Interested in Machine and Deep Learning. During the master degree in Data\r\n      Science I attended several courses regarding machine learning and\r\n      statistical models. In particular: Statistical Learning which try to cover\r\n      theoretically the majors techniques used to analyse data. in particular we\r\n      covered: Linear regression, Generalized linear models, K-NN, LDA, QDA,\r\n      Gaussian Naive Bayes, Naive Bayes, Ridge and Lasso regression, Support\r\n      Vector Machine, Decisional trees, Random Forest. Implementing all this\r\n      models into R.\r\n      <br />\r\n      <br /> Then I attended the main course of Machine Learning in which we've\r\n      done again the majors techniques implementing them into Python. Moreover\r\n      we also covered Neural Networks, focusing on Convolutional Neural Network.\r\n      The final exams consists was a challenge in which we have to build a CNN\r\n      able to compare and retrive images by similarity. The following link go to\r\n      GitHub where is hosted the code and report of that projects.\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\r\n    \"Image Retrival with Convolutional Neural Network\",\r\n    \"Statistical Notes\",\r\n  ],\r\n  projectGit: [\r\n    \"https://github.com/GabrieleGhisleni/ImageRetrival-ConvNN\",\r\n    \"...\",\r\n  ],\r\n  projectDescription: [\r\n    \"Extract features using convolutional neural network and compare images by similarity\",\r\n    \"Notes from university lectures with all the topics discussed, to be uploaded yet\",\r\n  ],\r\n  pdf: [\r\n    \"https://github.com/GabrieleGhisleni/ImageRetrival-ConvNN/blob/master/Applied_Machine_Learning%20report.pdf\",\r\n  ],\r\n};\r\n","export const Engineering = {\r\n  id: 1,\r\n  name: \"Data Engineering\",\r\n  description: (\r\n    <p>\r\n      Interested in Data Engineering, covered during the Big Data Technologies\r\n      course at UniTN. During the course we studied how to handle all the data\r\n      types: structured, semi-structured and a bit of unstructured, in batch or\r\n      in stream process. In particular we focused on the key concept of data\r\n      processing pipeline and its component: ingestion, storage, computation and\r\n      serving layer. \r\n      <br />\r\n      <br />\r\n      The storage part was one of the most time consuming we went trough the\r\n      usage of relational database as MySQL as well with NoSql databases such as\r\n      Redis and MongoDB, exploiting the basic usage and commands. After that we\r\n      focused on the data ingestion, studying Pub/Sub system that allow to\r\n      decouples applications, in particular we studied MQTT and Apache Kafka,\r\n      unlikely we implemented only the mqtt while kafka for time constraints was\r\n      studied only theoretically. About computing we saw some advanced tools for\r\n      big data computing such as Apache Spark using the free platform of\r\n      databricks. At the end of the course we had a brief overview of Apache\r\n      Flink without implementing it. Lastly regarding the serving layer we spent\r\n      times on the usage of Docker.\r\n    </p>\r\n  ),\r\n  projectName: [\r\n    \"Forecasting imbalance risks for Italian power grids using renewable energy predictions.\",\r\n  ],\r\n  projectDescription: [\r\n    \"In this projects we combined statistical method as well with big data tools, in particular we built a web application that given the forecast weather is able to predict and display the forecasted production of renewable energies and consequently imbalances on the italian grid. \\n To do this we used different technologies such as Docker, MySql, Redis, MQTT and Django to creating the web-application. Since the nature of the data we mainly used non-linear models for the predictions.\",\r\n  ],\r\n  projectGit: [\"https://github.com/GabrieleGhisleni/EnergyProject\"],\r\n  pdf: [\r\n    \"https://github.com/GabrieleGhisleni/EnergyProject/blob/master/bdt2021Ghisleni_Pomella_report.pdf\",\r\n  ],\r\n};\r\n","export const Front = {\r\n  id: 2,\r\n  name: \"Front-End Web Dev\",\r\n  description: (\r\n    <p>\r\n      Self-taught front-end developers, since almost all data science products\r\n      requires a serving layers i decided to focus and spent almost a year\r\n      learning front-end web development. in particular i started following a\r\n      complete course on Edx about{\" \"}\r\n      <a href=\"https://www.edx.org/course/html5-and-css-fundamentals\"> HTML</a>{\" \"}\r\n      and\r\n      <a href=\"https://www.edx.org/course/css-basics\"> CSS</a>, then i moved to\r\n      <a href=\"https://www.edx.org/course/javascript-introduction\">\r\n        {\" \"}\r\n        JavaScript\r\n      </a>{\" \"}\r\n      learning the basics syntax.\r\n      <br />\r\n      <br />\r\n      Having this basic tools i picked{\" \"}\r\n      <a href=\"https://www.coursera.org/learn/front-end-react\">React.js</a> as a\r\n      primary framework and followed a complete course on Coursera, then i\r\n      started to built my own application to practice, trying to including\r\n      different aspects such as geospatial data, authentication system and\r\n      trying to take advantages of Amazon AWS services, in particular Amazon\r\n      RDS, Amazon S3 and Ec2. Moreover i hosted some of my applications on\r\n      Heroku.\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\r\n    \"Open Gasoline - find the cheapest gas stations aroud you!\",\r\n    \"Web Personal Portfolio\",\r\n    \"Amigurumi e-commerce website\",\r\n    \"Tutorials and notes from courses\"\r\n  ],\r\n  projectDescription: [\r\n    \"Web application built using React and Python to create the geojson files used by the application. Every day the govern of italy publish the gas prices of all the stations, using github actions once a day run a .py scripts that update a folder in github, querying the websites it returns and display the cheapest gas stations around the municipality chosen.\",\r\n    \"For practise purpose i made also this web portfolio using React.\",\r\n    \"First web application made before follow the courses. This app is made as a copy of an e-commerce without the real buy/selling part. It is a work made with my family showing the beautiful amigurumi and crochests that my mum produces in her free times. it is hosted freely on Heroku and uses Amazon S3 to host the pictures.\",\r\n    \"Notes from lectures and courses\"\r\n  ],\r\n  projectGit: [\r\n    \"https://github.com/GabrieleGhisleni/GasolinePrices\",\r\n    \"https://github.com/GabrieleGhisleni/GG-website\",\r\n    \"https://github.com/GabrieleGhisleni/Django-AmigurumiLisi\",\r\n    \"https://github.com/GabrieleGhisleni/FrontEnd-Tutorial\"\r\n  ],\r\n  pdf: [null],\r\n  webpage: [\r\n    \"https://gabrieleghisleni.github.io/GasolinePrices/\",\r\n    \"https://gabrieleghisleni.github.io/GG-website/#/home\",\r\n    \"https://amigurumi-lisi.herokuapp.com/\",\r\n  ],\r\n};\r\n","export const Back = {\r\n  id: 3,\r\n  name: \"Back-End Web Dev\",\r\n  description: (\r\n    <p>\r\n      As well as with front-end developing i have the basis of back-end\r\n      development, in particular with relational dbms and python framework such\r\n      Django.\r\n      <br />\r\n      ... Skill in Progress! ...\r\n      <br />\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\"Amigurumi e-commerce website\"],\r\n  projectDescription: [\r\n    \"First web application made before follow the courses. This app is made as a copy of an e-commerce without the real buy/selling part. It is a work made with my family showing the beautiful amigurumi and crochests that my mum produces in her free times. it is hosted freely on Heroku and uses Amazon S3 to host the pictures.\",\r\n  ],\r\n  projectGit: [\"https://github.com/GabrieleGhisleni/Django-AmigurumiLisi\"],\r\n  webpage: [\"https://amigurumi-lisi.herokuapp.com/\"],\r\n  pdf: [null],\r\n};\r\n","export const Geo = {\r\n  id: 4,\r\n  name: \"GeoSpatial analysis\",\r\n  description: (\r\n    <p>\r\n      Attended the UniTN course of geospatial analysis and representation.\r\n      Course done by using Python and GeoPandas package, exploting the basic\r\n      usage of geo dataframes and geometry (from shapely) operations. After that\r\n      we analysed the API exposed by Open Street Map and the Pyrosm package to\r\n      easily deal data in python from OSM, we also focused on geospatial\r\n      statistics and metric. Moreover in the last part of the course we\r\n      quickly see how to render a map in the web!\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\r\n    \"GeoSpatial Notes\",\r\n    \"Open Gasoline - find the cheapest gas stations aroud you!\",\r\n  ],\r\n  projectDescription: [\r\n    \"Colab notebooks from lectures with all the topics discussed\",\r\n    \"Web application built using React and Python to create the geojson files used by the application. Every day the govern of italy publish the gas prices of all the stations, using github actions once a day run a .py scripts that update a folder in github, querying the websites it returns and display the cheapest gas stations around the municipality chosen.\",\r\n  ],\r\n  projectGit: [\r\n    \"https://github.com/GabrieleGhisleni/Geospatial-data-analysis\",\r\n    \"https://github.com/GabrieleGhisleni/GasolinePrices\",\r\n  ],\r\n  pdf: [null],\r\n  webpage: [\r\n    null,\r\n    \"https://gabrieleghisleni.github.io/GasolinePrices/\",\r\n  ],\r\n};\r\n","export const Customer = {\r\n  id: 5,\r\n  name: \"Customer Analytics\",\r\n  description: (\r\n    <p>\r\n      Customer Analytics regard statistics on survey, in particular this form\r\n      are characterized by a multilevel respondent structure since each\r\n      respondent response more than one questions. In this course offered by\r\n      UniTN we analyzied two different type of conjoint analysis: Traditional\r\n      conjoint analysis and Choice based analysis.\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\r\n    \"Traditional Conjoint Analysis with R\",\r\n    \"Choice Based Conjoint Analysis with R\",\r\n    \"Notes from lectures\",\r\n  ],\r\n  projectDescription: [\r\n    \"Perform and interpret a traditional conjoint analysis.\",\r\n    \"perform and interpret a choice based conjoint analysis.\",\r\n    \"Markdown notes from lectures.\",\r\n  ],\r\n  projectGit: [\r\n    \"https://github.com/GabrieleGhisleni/CustomerAnalytics/blob/master/R/1.Traditional%20Conjoint%20Multi_LM/Traditional_conjoint.md\",\r\n    \"https://github.com/GabrieleGhisleni/CustomerAnalytics/blob/master/R/2.Choice%20Based%20Conjoint%20MNL/Choice-based-conjoint-analysis.md\",\r\n    \"https://github.com/GabrieleGhisleni/CustomerAnalytics/blob/master/Traditional_conjoint.md\",\r\n  ],\r\n  pdf: [null],\r\n};\r\n","export const Project = {\r\n  id: 6,\r\n  name: \"Project Management\",\r\n  description:\r\n  <p>\r\n    Project Managament course offered by UniTN valid also as hours of training by the PMI.\r\n    Worked on therical aspects as the lifecycle of a project, the 10 area of knowledge and the ITTO's.\r\n    Moreover we dedicate half of the course on Microsoft Project dealing with WBS, Time, Resources and Constraints.\r\n  </p>,\r\n\r\n  projectName: [\"Practical Microsoft Project Example\", 'Theorical Notes'],\r\n  projectDescription: [\"Examples of microsoft projects made during the course\", 'Theorical Notes'],\r\n  projectGit: [\"https://github.com/GabrieleGhisleni/Project-Managment/tree/main/Microsoft%20Projects\", 'https://github.com/GabrieleGhisleni/Project-Managment/blob/main/Project%20management%20notes.md'],\r\n  pdf: [null],\r\n};\r\n","import { ML } from \"./ml\";\r\nimport { Engineering } from \"./eng\";\r\nimport { Front } from \"./front\";\r\nimport { Back } from \"./back\";\r\nimport { Geo } from \"./geo\";\r\nimport { Customer } from \"./customer\";\r\nimport { Project } from \"./prj\";\r\nimport { Viz } from \"./viz\";\r\nimport { CSS } from \"./css\";\r\n\r\nexport const PROJECTS = [\r\n  ML,\r\n  Engineering,\r\n  Front,\r\n  Back,\r\n  CSS,\r\n  Geo,\r\n  Customer,\r\n  Project,\r\n  Viz,\r\n];\r\n","export const CSS = {\r\n  id: 9,\r\n  name: \"Computational Social Science\",\r\n  description: (\r\n    <p>\r\n      Course attended at the university of Trento, the final project was a\r\n      Semantic Network Analysis performed on Twitter about the No-Vax movement\r\n      in Italy. In this project we put in practice many techniques from different\r\n      field such as network analysis, done with Networkx in Python as well with \r\n      Natural Language Process operation always done in Python to be able to analyse\r\n      around 60.000 tweets collected in the end of september 2021.\r\n    </p>\r\n  ),\r\n\r\n  projectName: [\"Semantic Network Analysis in Twitter of No-Vax Movement. \"],\r\n  projectDescription: [\r\n    <p>\r\n      this project aimed to detect subgroups in the community and understanding\r\n      the spread of them toghether with an analysis of the ecology sources used\r\n      in the debate.\r\n    </p>,\r\n  ],\r\n  projectGit: [\"https://github.com/GabrieleGhisleni/Twitter-Social-Analysis\"],\r\n  pdf: ['https://github.com/GabrieleGhisleni/Twitter-Social-Analysis/blob/master/Computational_Social_Science.pdf'],\r\n};\r\n","export const Viz = {\r\n  id: 7,\r\n  name: \"Data Visualization\",\r\n  description:\r\n    \"During the university i start studying machine network and neural network\\\r\n        then i started to build simple models and more complex algorithms structures. im very interested\\\r\n        in Natural language process\",\r\n\r\n  projectName: [\"Image Retrival with Convolutional Neural Network\"],\r\n  projectDescription: [\"Create web application\"],\r\n  projectGit: [\"https://github.com/GabrieleGhisleni/ImageRetrival-ConvNN\"],\r\n  pdf: [null],\r\n};\r\n","export const HOBBIES = [\r\n    {\r\n        id: 0,\r\n        name: \"Table Tennis\",\r\n        description: \"I started play table tennis when i was graduating for the first time in Pavia,\\\r\n        since then i've never stopped. Currently i play in the USD Villazano in the city center of Trento.\",\r\n        image: null,\r\n        extra: null\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Hiking\",\r\n        description: \"Always lived in city nearby mountains, love hiking\",\r\n        image: null,\r\n        extra: null\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Tennis\",\r\n        description: \"I started to play tennis for fun the summer of 2021. Currently we are a group of 5 friends playing for sharing some good moments outside the workday and study life\",\r\n        image: null,\r\n        extra: null\r\n    }\r\n\r\n]","// React\r\nimport React, {Component} from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Custom omponents \r\nimport NavBar from './Navbar';\r\nimport { Home } from './Home';\r\nimport { Footer } from './Footer';\r\nimport TabProject from './HandlerData'\r\nimport Header from './Header'\r\nimport RenderProjects from './TabProject'\r\n// Shared Const\r\nimport {PROJECTS} from './../shared/projects';\r\nimport {HOBBIES} from './../shared/hobbies';\r\n\r\nconst Main = () => {\r\n    return(\r\n        <React.Fragment>\r\n        <NavBar />\r\n        <Switch>\r\n            <Route path='/home' component={()=> <div><Header/><Home/></div>}/>\r\n            <Route path='/projects' component={() => RenderProjects(PROJECTS)}/>\r\n            <Route path='/hobbies' component={() => RenderProjects(HOBBIES) }/>\r\n            <Redirect to='/home'/>\r\n        </Switch>\r\n        <Footer/>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Main;","import './css/style.css';\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\n\nimport {Component} from 'react';\nimport Main from './components/Main';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return(\n      <div>\n        <HashRouter>\n          <Main />\n        </HashRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}